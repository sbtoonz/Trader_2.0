name: Build and publish Mod
on:
  push:
    tags:
      - "v*"

jobs:
  Build-Mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install NuGet
        uses: nuget/setup-nuget@v1

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Get build commands
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y mono-roslyn mono-complete mono-dbg msbuild unzip dirmngr dotnet-sdk-6.0 dotnet-runtime-6.0 rename

      - name: Restore solution dependencies
        run: |
          dotnet restore
          nuget restore
          dotnet tool restore 
          dotnet tool install -g tcli

      - name: Delete old Valheim directory
        run: |
          rm -rdf /home/runner/.steam/steam/steamapps/common/Valheim

      - name: Install SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Download BepInEX
        run: |
          wget -O bepinex.zip "https://valheim.thunderstore.io/package/download/denikson/BepInExPack_Valheim/5.4.1901/"
          unzip bepinex.zip -d ~/BepInExRaw
          steamcmd +force_install_dir /home/runner/.steam/steam/steamapps/common/Valheim +login anonymous +app_update 896660 validate +exit

      - name: Install BepInEX
        run: |
          mv /home/runner/.steam/steam/steamapps/common/Valheim/valheim_server_Data/ /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/
          mv ~/BepInExRaw/BepInExPack_Valheim/* /home/runner/.steam/steam/steamapps/common/Valheim/
          mkdir -p ~/.steam/steam/steamapps/common/

      - name: Publicize Valheim Assemblies
        run: |
          wget https://github.com/iRebbok/APublicizer/releases/download/1.0.3/native-linux-x64-release.tar.gz
          mkdir ~/assembpublicizer
          mkdir ~/publicAssemblies
          tar -xf native-linux-x64-release.tar.gz -C ~/assembpublicizer
          mkdir -p /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/publicized_assemblies/
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_googleanalytics.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_guiutils.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_lux.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_postprocessing.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_simplemeshcombine.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_steamworks.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_sunshafts.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_utils.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/assembly_valheim.dll
          ~/assembpublicizer/APublicizer /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/Assembly-CSharp.dll

      - name: Copy Publicized Assemblies -> Valheim
        run: |
          cp --verbose /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/*Publicized.dll  ~/publicAssemblies/
          cd ~/publicAssemblies
          rename -v 'y/A-Z/a-z/' * .dll
          rename -v 'y/-publicized/_publicized/' *.dll
          cp --verbose ~/publicAssemblies/* /home/runner/.steam/steam/steamapps/common/Valheim/valheim_Data/Managed/publicized_assemblies/
          sudo cp --verbose ~/publicAssemblies/* /usr/lib/mono/4.6.2-api/
          cd ~

      - name: Build
        run: |
          mkdir -p /home/runner/work/Trader2.0/Trader2.0/ServerSync/bin/Release
          wget https://github.com/blaxxun-boop/ServerSync/releases/download/v1.13/ServerSync.dll
          mkdir -p /home/runner/work/Trader2.0/Trader2.0/Trader2.0/Libs
          mv -v ServerSync.dll /home/runner/work/Trader2.0/Trader2.0/Trader2.0/Libs/
          msbuild Trader2.0.sln /p:Configuration=Github

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: 'Trader 2.0'
          # A file, directory or wildcard pattern that describes what to upload
          path: '/home/runner/work/Trader_2.0/Trader_2.0/Trader2.0/bin/Release/Trader20.dll'

      - name: Set Output Version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          
      - name: Check Version Output
        env:
          RELEASE_VERSION: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          name: ${{ steps.vars.outputs.tag }}
          tag_name: ${{ steps.vars.outputs.tag }}
          body_path: CHANGELOG.MD
          files: /home/runner/work/Trader_2.0/Trader_2.0/Trader2.0/bin/Release/Trader20.dll
        env:
          GITHUB_TOKEN: ${{secrets.PATOKEN}}

      - name: Test Tstore Release
        run: |
          tcli.exe build --config=./Thunderstore_Release/